/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ar.com.coder.ui.tintoreria;

import ar.com.coder.Principal;
import ar.com.coder.dominio.ArticuloControlador;
import ar.com.coder.dominio.BarcadaControlador;
import ar.com.coder.dominio.RutaControlador;
import ar.com.coder.dominio.excel.ExcelResumenConsumo;
import ar.com.coder.objetos.Articulo;
import ar.com.coder.objetos.ArticuloInsumo;
import ar.com.coder.objetos.ArticuloProduccion;
import ar.com.coder.objetos.TipoArticulo;
import ar.com.coder.objetos.tintoreria.Maquina;
import ar.com.coder.objetos.tintoreria.NodoRuta;
import ar.com.coder.objetos.tintoreria.NodoRutaDetalle;
import ar.com.coder.objetos.tintoreria.Ruta;
import ar.com.coder.objetos.tintoreria.RutaBase;
import ar.com.coder.objetos.tintoreria.simulador.ArticuloSimulado;
import ar.com.coder.objetos.tintoreria.simulador.ConsumoArticulo;
import ar.com.coder.ui.grillas.ArticuloSimuladoGrilla;
import ar.com.coder.ui.grillas.CalculoConsumoArticuloGrilla;
import ar.com.coder.ui.grillas.CalculoConsumoQuimicoGrilla;
import ar.com.coder.ui.treeTable.BaseTreeTable;
import com.sun.org.apache.bcel.internal.generic.AALOAD;
import java.awt.BorderLayout;
import java.io.File;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author sysadmin
 */
public class SimuladorQuimicos extends javax.swing.JInternalFrame {

    private ArticuloControlador articuloControlador;
    private RutaControlador rutaControlador;
    private BarcadaControlador barcadaControlador;
    private ArrayList<ArticuloSimulado> simulados = new ArrayList<>();
    private static ArrayList<ConsumoArticulo> resumenConsumo = new ArrayList<>();
    private ArrayList<NodoRutaDetalle> datos = new ArrayList<>();
    private final CalculoConsumoQuimicoGrilla consumosQuimicos;
    private final CalculoConsumoArticuloGrilla resumenconsumoArticulos;
    private final ArticuloSimuladoGrilla simuladoGrilla;
    private HashMap<ArticuloInsumo, ConsumoArticulo> resumen = new HashMap<>();
    private ArrayList<Articulo> articulos;
    private DefaultComboBoxModel dcbmArticulos;
    private ArticuloSimulado articuloRaiz;
    public static ArrayList<ConsumoArticulo> getResumenConsumo() {
        return resumenConsumo;
    }

    /**
     * Creates new form SimuladorQuimicos
     */
    public void crearRaiz(){
        RutaBase ruta = new RutaBase();
        ruta.setArticulo(new ArticuloProduccion("00000", "Articulo"));
        articuloRaiz=new ArticuloSimulado(ruta,0,0.0F);
    }
    public SimuladorQuimicos() {
        crearRaiz();
        simuladoGrilla = new ArticuloSimuladoGrilla(articuloRaiz);
        initComponents();
        barcadaControlador = new BarcadaControlador(Principal.conexionInfotint);
        
        articuloControlador = new ArticuloControlador(Principal.conexionInfotint);
        rutaControlador = new RutaControlador(Principal.connection);
        consumosQuimicos = new CalculoConsumoQuimicoGrilla();
        resumenconsumoArticulos = new CalculoConsumoArticuloGrilla();
        
        
        articulos = articuloControlador.extrerTodo(TipoArticulo.PRODUCCION);
        dcbmArticulos = new DefaultComboBoxModel(articulos.toArray());
        //simuladoGrilla.setData(simulados);
        consumosQuimicos.setData(datos);
        resumenconsumoArticulos.setData(resumenConsumo);
        jcbArticulo.setModel(dcbmArticulos);
        jtArticulos.setModel(simuladoGrilla);
        jtResumen.setModel(resumenconsumoArticulos);
        jtDetalle.setModel(consumosQuimicos);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jcbArticulo = new javax.swing.JComboBox<>();
        jbAgregar = new javax.swing.JButton();
        jbQuitar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtArticulos = new BaseTreeTable(simuladoGrilla);
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jtDetalle = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jtResumen = new javax.swing.JTable();
        jpGrafico = new javax.swing.JPanel();
        jbCalcular = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createEtchedBorder());
        setTitle("Simulador General de Quimicos");

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setText("Articulo:");

        jcbArticulo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbArticulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbArticuloActionPerformed(evt);
            }
        });

        jbAgregar.setText("+");
        jbAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAgregarActionPerformed(evt);
            }
        });

        jbQuitar.setText("-");
        jbQuitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbQuitarActionPerformed(evt);
            }
        });

        jtArticulos.setModel(simuladoGrilla);
        jtArticulos.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane1.setViewportView(jtArticulos);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcbArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbAgregar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbQuitar)
                        .addGap(0, 98, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jcbArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbAgregar)
                    .addComponent(jbQuitar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jtDetalle.setAutoCreateRowSorter(true);
        jtDetalle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtDetalle.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane4.setViewportView(jtDetalle);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 566, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Detallado", jPanel4);

        jtResumen.setAutoCreateRowSorter(true);
        jtResumen.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane5.setViewportView(jtResumen);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 566, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 436, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Resumen", jPanel5);

        javax.swing.GroupLayout jpGraficoLayout = new javax.swing.GroupLayout(jpGrafico);
        jpGrafico.setLayout(jpGraficoLayout);
        jpGraficoLayout.setHorizontalGroup(
            jpGraficoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 586, Short.MAX_VALUE)
        );
        jpGraficoLayout.setVerticalGroup(
            jpGraficoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 487, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Grafico", jpGrafico);

        jbCalcular.setText("Calcular");
        jbCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCalcularActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbCalcular, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbCalcular)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcbArticuloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbArticuloActionPerformed


    }//GEN-LAST:event_jcbArticuloActionPerformed
    private Boolean agregarResumen(ArticuloInsumo articuloInsumo, NodoRutaDetalle nrd) {
        if (!resumen.containsKey(articuloInsumo)) {
            resumen.put(articuloInsumo, new ConsumoArticulo(articuloInsumo, articuloInsumo.getUnidad(), nrd.getConsumo(), nrd.getCostoConsumo()));
        } else {
            ConsumoArticulo articuloResumido = resumen.get(articuloInsumo);
            float consumo;
            float costoConsumo;
            consumo = articuloResumido.getConsumo() + nrd.getConsumo();
            costoConsumo = articuloResumido.getCostoConsumo() + nrd.getCostoConsumo();
            articuloResumido.setConsumo(consumo);
            articuloResumido.setCostoConsumo(costoConsumo);
        }
        return true;
    }

    private void calcularResumen() {
        for (Map.Entry<ArticuloInsumo, ConsumoArticulo> map : resumen.entrySet()) {
            resumenConsumo.add(map.getValue());
        }

        JFreeChart barChart = ChartFactory.createBarChart(
                "Productos Consumidos",
                "Productos",
                "Cantidad",
                createDataset(),
                PlotOrientation.HORIZONTAL,
                true, true, false);

        ChartPanel chartPanel = new ChartPanel(barChart);
        jpGrafico.removeAll();
        jpGrafico.setLayout(new java.awt.BorderLayout());
        jpGrafico.add(chartPanel, BorderLayout.CENTER);
        jpGrafico.validate();
        resumenconsumoArticulos.fireTableDataChanged();
    }
    private void jbQuitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbQuitarActionPerformed
        int fila = jtArticulos.getSelectedRow();
        if (fila > 0) {
            if (JOptionPane.showConfirmDialog(this, "Desea Quitar el Articulo?", "Atencion", JOptionPane.QUESTION_MESSAGE) == 0) {
                simulados.remove(fila);
            }
        }
    }//GEN-LAST:event_jbQuitarActionPerformed

    private void jbAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAgregarActionPerformed

        ArticuloProduccion ap = (ArticuloProduccion) jcbArticulo.getSelectedItem();

        Ruta ruta = rutaControlador.extraer(ap.getCodigo());
        if (ruta.sizeNodos() == 0) {
            JOptionPane.showMessageDialog(this, "Artiulo sin Ruta", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;
        }
        ArticuloSimulado articuloSimulado = new ArticuloSimulado(ruta);
        if (!simulados.contains(articuloSimulado)) {
            simulados.add(articuloSimulado);
            articuloRaiz.setVariantes(simulados);
            jtArticulos.setModel(simuladoGrilla);
            
        } else {
            JOptionPane.showMessageDialog(this, "Artiulo ya registrado", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;
        }
    }//GEN-LAST:event_jbAgregarActionPerformed

    private void jbCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCalcularActionPerformed
        resumen.clear();
        resumenConsumo.clear();
        datos.clear();
        for (ArticuloSimulado simulado : simulados) {
            RutaBase r = simulado.getRuta();
            for (int i = 0; i < r.sizeNodos(); i++) {
                NodoRuta nodo = r.getNodo(i);
                nodo.setLitrosAgua(calcularLitros(simulado.getKilos(), nodo.getMaquina()));
                barcadaControlador.convertirEnBarcada(nodo, simulado.getKilos(), simulado.getMetros().floatValue());
                barcadaControlador.calcularConsumo();
                barcadaControlador.retornaNodo();
                datos.addAll(nodo.getDetalle());
                for (NodoRutaDetalle nrd : nodo.getDetalle()) {
                    agregarResumen(nrd.getProducto(), nrd);
                }
                consumosQuimicos.fireTableDataChanged();
            }

        }
        calcularResumen();
    }//GEN-LAST:event_jbCalcularActionPerformed

    private float calcularLitros(float kilos, Maquina m) {
        float litros = kilos * m.getFactor();
        if (m.getCodigo().equals("RO1") || m.getCodigo().equals("RO2")
                || m.getCodigo().equals("RO3") || m.getCodigo().equals("IO1")
                || m.getCodigo().equals("IO2") || m.getCodigo().equals("PO1")) {
            litros += Maquina.LITROS_FONDO;
        }
        return litros;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton jbAgregar;
    private javax.swing.JButton jbCalcular;
    private javax.swing.JButton jbQuitar;
    private javax.swing.JComboBox<String> jcbArticulo;
    private javax.swing.JPanel jpGrafico;
    private ar.com.coder.ui.treeTable.BaseTreeTable jtArticulos;
    private javax.swing.JTable jtDetalle;
    private javax.swing.JTable jtResumen;
    // End of variables declaration//GEN-END:variables

    private CategoryDataset createDataset() {
        final DefaultCategoryDataset dataset = new DefaultCategoryDataset();
         Collections.sort(resumenConsumo);
        for (ConsumoArticulo ca : resumenConsumo) {
            dataset.addValue(ca.getConsumo(),"Consumo" ,ca.getProducto().getCodigo() );
            dataset.addValue(ca.getCostoConsumo(),"$" ,ca.getProducto().getCodigo() );
        }
        return dataset;
    }
}
