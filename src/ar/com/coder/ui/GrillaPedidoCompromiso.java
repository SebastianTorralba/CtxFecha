/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ar.com.coder.ui;

import ar.com.coder.dominio.excel.ExcelPedido;
import ar.com.coder.ui.grillas.renders.PedidoGrillaRender;
import ar.com.coder.Principal;
import ar.com.coder.dominio.PedidoSeguimientoControlador;
import ar.com.coder.objetos.PedidoSeguimiento;
import ar.com.coder.ui.grillas.PedidoGrilla;
import ar.com.coder.ui.grillas.PedidoTerminarGrilla;
import ar.com.coder.ui.programador.FrmProgramador;
import java.awt.Component;
import java.beans.PropertyVetoException;
import java.io.File;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.TableRowSorter;


/**
 *
 * @author sysadmin
 */
public class GrillaPedidoCompromiso extends javax.swing.JInternalFrame {

    private PedidoSeguimientoControlador psc;
    
    private ExcelPedido excelPedido;
    private ArrayList<PedidoSeguimiento> datos;
    private ArrayList<PedidoSeguimiento> datosFiltrados;
    private ArrayList<String> filtroEstados;
    private TableRowSorter trsGrilla;
    /**
     * Creates new form GrillaPedidoCompromiso
     */
    
    private void setFiltro(){
        filtroEstados = new ArrayList<String>();
        filtroEstados.add("CRUDO DSP+");
        filtroEstados.add("TEJIENDO");
        filtroEstados.add("PEND SIN CRUDO");       
        filtroEstados.add("PENDIENTE");
    }
    public GrillaPedidoCompromiso() {
        
        initComponents();
        setFiltro();
        this.trsGrilla = new TableRowSorter<PedidoTerminarGrilla>();
        psc = new PedidoSeguimientoControlador(Principal.connection);
        pedidoGrilla = new PedidoGrilla();
        trsGrilla.setModel(pedidoGrilla);        
        jtGrilla.setModel(pedidoGrilla);
        jtGrilla.setRowSorter(trsGrilla);
        jtGrilla.setDefaultRenderer(Object.class, new PedidoGrillaRender());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pedidoGrilla = new ar.com.coder.ui.grillas.PedidoGrilla();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtGrilla = new javax.swing.JTable();
        jbExtraer = new javax.swing.JButton();
        jbExcel = new javax.swing.JButton();
        jbGantt = new javax.swing.JButton();
        jbCalendario = new javax.swing.JButton();
        jlEstado = new javax.swing.JLabel();
        jcbFiltrar = new javax.swing.JCheckBox();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Fecha Compromiso de Pedidos Industriales");

        jtGrilla.setModel(pedidoGrilla);
        jScrollPane1.setViewportView(jtGrilla);

        jbExtraer.setText("Extraer Pedidos");
        jbExtraer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExtraerActionPerformed(evt);
            }
        });

        jbExcel.setText("Exportar a Excel");
        jbExcel.setEnabled(false);
        jbExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcelActionPerformed(evt);
            }
        });

        jbGantt.setText("Gantt");
        jbGantt.setEnabled(false);
        jbGantt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGanttActionPerformed(evt);
            }
        });

        jbCalendario.setText("Calendario");
        jbCalendario.setEnabled(false);
        jbCalendario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCalendarioActionPerformed(evt);
            }
        });

        jlEstado.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jcbFiltrar.setText("Filtrar Estados \"Pendientes\"");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbExtraer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbGantt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbCalendario)
                        .addGap(10, 10, 10)
                        .addComponent(jcbFiltrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 537, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbExtraer)
                            .addComponent(jbExcel)
                            .addComponent(jbGantt)
                            .addComponent(jbCalendario))
                        .addComponent(jlEstado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jcbFiltrar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbExtraerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExtraerActionPerformed
        // TODO add your handling code here:
        String mensaje = "La ejecucion del Algoritmo Puede tardar unos minutos...";
        JOptionPane.showMessageDialog(this, mensaje, "Advertencia", JOptionPane.INFORMATION_MESSAGE);
        final Component c = this;
        Runnable a = new Runnable() {
            @Override
            public void run() {
                jlEstado.setText("Ejecutando espere...");
                datos = psc.extrerTodo();
                datosFiltrados=datos;
                pedidoGrilla.setData(datosFiltrados);
                excelPedido = new ExcelPedido();
                excelPedido.setDatos(datosFiltrados);
                jtGrilla.setModel(pedidoGrilla);
                pedidoGrilla.fireTableDataChanged();
                habilitarBotones(true);
                jlEstado.setText("");
                String mensaje="Termino el Algoritmo";
                JOptionPane.showMessageDialog(c, mensaje, "Exito", JOptionPane.INFORMATION_MESSAGE);                
            }
        };
        Thread t = new Thread(a);
        t.start();

    }//GEN-LAST:event_jbExtraerActionPerformed

    private void jbExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcelActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int returnVal = fileChooser.showSaveDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();

            excelPedido.generarArchivo(file);
        }

    }//GEN-LAST:event_jbExcelActionPerformed

    private void jbGanttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGanttActionPerformed
    }//GEN-LAST:event_jbGanttActionPerformed

    private void jbCalendarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCalendarioActionPerformed
        //BizcalDemo bizcalDemo = new BizcalDemo(datos);
          new FrmProgramador(datosFiltrados).setVisible(true);
    }//GEN-LAST:event_jbCalendarioActionPerformed

    private void filtrarDatos(){
        datosFiltrados=new ArrayList<>();
        for (PedidoSeguimiento pedido : datos) {
            if(filtroEstados.contains(pedido.getEstado())){
                datosFiltrados.add(pedido);
               
            }
        }
        pedidoGrilla.fireTableDataChanged();
                
    }
    
    private void quitarFiltro(){
        datosFiltrados=datos;
    }
 
public void habilitarBotones(Boolean valor){
    jbCalendario.setEnabled(valor);
    jbExcel.setEnabled(valor);
    jbGantt.setEnabled(valor);
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbCalendario;
    private javax.swing.JButton jbExcel;
    private javax.swing.JButton jbExtraer;
    private javax.swing.JButton jbGantt;
    private javax.swing.JCheckBox jcbFiltrar;
    private javax.swing.JLabel jlEstado;
    private javax.swing.JTable jtGrilla;
    private ar.com.coder.ui.grillas.PedidoGrilla pedidoGrilla;
    // End of variables declaration//GEN-END:variables
}
